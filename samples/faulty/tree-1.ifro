let binarySearch = \x.= x.> x ->
                   fix
                   \search tree ->
                   @tree
                   tree
                   (\_ -> none)
                   (\left el right ->
                    if x.= x el
                    then some el
                    else if x.> x el
                         then search right
                         else search left)

in
let intTree = node (node empty
                         33
                         (node empty 36 empty))
                   40
                   (node (node empty "60" empty)
                         63
                         (node empty 82 empty))
in
let strTree = node empty "d" empty in
let print = \toString x ->
             let _ = @option x (\_ -> "nothing") toString
                     |> concat " "
                     |> write in x
in
(& (binarySearch i.= i.> 60 intTree |> print i.toString)
   (binarySearch string.= string.> "foo" strTree |> print (\x -> x)))

